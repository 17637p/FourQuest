//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer cbTerrainTexture
// {
//
//   int NumOfTexture;                  // Offset:    0 Size:     4
//   float3 padTerrainTexture;          // Offset:    4 Size:    12 [unused]
//   
//   struct Layer
//   {
//       
//       float TileSizeX;               // Offset:   16
//       float TileSizeY;               // Offset:   20
//       float TileOffsetX;             // Offset:   24
//       float TileOffsetY;             // Offset:   28
//       float Metalic;                 // Offset:   32
//       float Roughness;               // Offset:   36
//       float a;                       // Offset:   40
//       float b;                       // Offset:   44
//
//   } layers[4];                       // Offset:   16 Size:   128
//
// }
//
// cbuffer cbLight
// {
//
//   struct DirectionalLight
//   {
//       
//       float3 color;                  // Offset:    0
//       float intensity;               // Offset:   12
//       float3 direction;              // Offset:   16
//       float pad;                     // Offset:   28
//
//   } directionalLights[3];            // Offset:    0 Size:    96
//   
//   struct PointLight
//   {
//       
//       float3 color;                  // Offset:   96
//       float intensity;               // Offset:  108
//       float3 position;               // Offset:  112
//       float range;                   // Offset:  124
//       float3 attenuation;            // Offset:  128
//       float pad;                     // Offset:  140
//
//   } pointLights[10];                 // Offset:   96 Size:   480
//   
//   struct SpotLight
//   {
//       
//       float3 color;                  // Offset:  576
//       float intensity;               // Offset:  588
//       float3 position;               // Offset:  592
//       float range;                   // Offset:  604
//       float3 direction;              // Offset:  608
//       float spot;                    // Offset:  620
//       float3 attenuation;            // Offset:  624
//       float pad;                     // Offset:  636
//
//   } spotLights[5];                   // Offset:  576 Size:   320
//   uint numOfDirectionalLight;        // Offset:  896 Size:     4
//   uint numOfPointLight;              // Offset:  900 Size:     4
//   uint numOfSpotLight;               // Offset:  904 Size:     4
//   uint isUseIBL;                     // Offset:  908 Size:     4 [unused]
//   float3 eyePosition;                // Offset:  912 Size:    12
//   float pad2;                        // Offset:  924 Size:     4 [unused]
//
// }
//
// cbuffer cbDirectionalShadow
// {
//
//   float4x4 cLightViewProjTex[9];     // Offset:    0 Size:   576
//   float4 cCascadeEnds[3];            // Offset:  576 Size:    48
//   int cShadowCount;                  // Offset:  624 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// gSamplerAnisotropic               sampler      NA          NA             s0      1 
// gShadowSampler                  sampler_c      NA          NA             s1      1 
// gAlbedoMap[0]                     texture  float4          2d             t0      1 
// gAlbedoMap[1]                     texture  float4          2d             t1      1 
// gAlbedoMap[2]                     texture  float4          2d             t2      1 
// gAlbedoMap[3]                     texture  float4          2d             t3      1 
// gNormalMap[0]                     texture  float4          2d            t12      1 
// gNormalMap[1]                     texture  float4          2d            t13      1 
// gNormalMap[2]                     texture  float4          2d            t14      1 
// gNormalMap[3]                     texture  float4          2d            t15      1 
// gAlphaMap                         texture  float4          2d            t16      1 
// gDirectionalShadowMap             texture  float4     2darray            t18      1 
// cbTerrainTexture                  cbuffer      NA          NA            cb0      1 
// cbLight                           cbuffer      NA          NA            cb1      1 
// cbDirectionalShadow               cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// POSITION                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 2      w        1     NONE   float      w
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TANGENT                  0   xyz         3     NONE   float   xyz 
// TEXCOORD                 0   xy          4     NONE   float   xy  
// TEXCOORD                 1     zw        4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
dcl_constantbuffer CB0[9], dynamicIndexed
dcl_constantbuffer CB1[58], dynamicIndexed
dcl_constantbuffer CB2[40], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t12
dcl_resource_texture2d (float,float,float,float) t13
dcl_resource_texture2d (float,float,float,float) t14
dcl_resource_texture2d (float,float,float,float) t15
dcl_resource_texture2d (float,float,float,float) t16
dcl_resource_texture2darray (float,float,float,float) t18
dcl_input_ps linear v1.xyz
dcl_input_ps linear v1.w
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xy
dcl_output o0.xyzw
dcl_temps 13
dcl_indexableTemp x0[4], 4
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v4.xyxx, t16.xyzw, s0
mov r1.x, l(0)
loop 
  uge r1.y, r1.x, cb0[0].x
  breakc_nz r1.y
  ishl r1.y, r1.x, l(1)
  add r1.zw, v4.xxxy, cb0[r1.y + 1].zzzw
  mul r1.yz, r1.zzwz, cb0[r1.y + 1].xxyx
  mov x0[r1.x + 0].x, r1.y
  mov x0[r1.x + 0].y, r1.z
  iadd r1.x, r1.x, l(1)
endloop 
mov r1.xy, x0[3].xyxx
sample_indexable(texture2d)(float,float,float,float) r2.xyz, r1.xyxx, t3.xyzw, s0
log r2.xyz, r2.xyzx
mul r2.xyz, r2.xyzx, l(2.200000, 2.200000, 2.200000, 0.000000)
exp r2.xyz, r2.xyzx
mov r1.zw, x0[2].xxxy
sample_indexable(texture2d)(float,float,float,float) r3.xyz, r1.zwzz, t2.xyzw, s0
log r3.xyz, r3.xyzx
mul r3.xyz, r3.xyzx, l(2.200000, 2.200000, 2.200000, 0.000000)
exp r3.xyz, r3.xyzx
mov r4.xy, x0[1].xyxx
sample_indexable(texture2d)(float,float,float,float) r5.xyz, r4.xyxx, t1.xyzw, s0
log r5.xyz, r5.xyzx
mul r5.xyz, r5.xyzx, l(2.200000, 2.200000, 2.200000, 0.000000)
exp r5.xyz, r5.xyzx
mov r4.zw, x0[0].xxxy
sample_indexable(texture2d)(float,float,float,float) r6.xyz, r4.zwzz, t0.xyzw, s0
log r6.xyz, r6.xyzx
mul r6.xyz, r6.xyzx, l(2.200000, 2.200000, 2.200000, 0.000000)
exp r6.xyz, r6.xyzx
sample_indexable(texture2d)(float,float,float,float) r7.xyz, r1.xyxx, t15.xyzw, s0
mad r7.xyz, r7.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r1.x, r7.xyzx, r7.xyzx
rsq r1.x, r1.x
mul r7.xyz, r1.xxxx, r7.xyzx
dp3 r1.x, v2.xyzx, v2.xyzx
rsq r1.x, r1.x
mul r8.xyz, r1.xxxx, v2.xyzx
dp3 r1.x, v3.xyzx, r8.xyzx
mad r9.xyz, -r1.xxxx, r8.xyzx, v3.xyzx
dp3 r1.x, r9.xyzx, r9.xyzx
rsq r1.x, r1.x
mul r9.xyz, r1.xxxx, r9.xyzx
mul r10.xyz, r8.zxyz, r9.yzxy
mad r10.xyz, r8.yzxy, r9.zxyz, -r10.xyzx
mul r11.xyz, r7.yyyy, r10.xyzx
mad r7.xyw, r7.xxxx, r9.xyxz, r11.xyxz
mad r7.xyz, r7.zzzz, r8.xyzx, r7.xywx
dp3 r1.x, r7.xyzx, r7.xyzx
rsq r1.x, r1.x
mul r7.xyz, r1.xxxx, r7.xyzx
sample_indexable(texture2d)(float,float,float,float) r1.xyz, r1.zwzz, t14.xyzw, s0
mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
mul r11.xyz, r10.xyzx, r1.yyyy
mad r1.xyw, r1.xxxx, r9.xyxz, r11.xyxz
mad r1.xyz, r1.zzzz, r8.xyzx, r1.xywx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
sample_indexable(texture2d)(float,float,float,float) r11.xyz, r4.xyxx, t13.xyzw, s0
mad r11.xyz, r11.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r1.w, r11.xyzx, r11.xyzx
rsq r1.w, r1.w
mul r11.xyz, r1.wwww, r11.xyzx
mul r12.xyz, r10.xyzx, r11.yyyy
mad r11.xyw, r11.xxxx, r9.xyxz, r12.xyxz
mad r11.xyz, r11.zzzz, r8.xyzx, r11.xywx
dp3 r1.w, r11.xyzx, r11.xyzx
rsq r1.w, r1.w
mul r11.xyz, r1.wwww, r11.xyzx
sample_indexable(texture2d)(float,float,float,float) r4.xyz, r4.zwzz, t12.xyzw, s0
mad r4.xyz, r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r1.w, r4.xyzx, r4.xyzx
rsq r1.w, r1.w
mul r4.xyz, r1.wwww, r4.xyzx
mul r10.xyz, r10.xyzx, r4.yyyy
mad r4.xyw, r4.xxxx, r9.xyxz, r10.xyxz
mad r4.xyz, r4.zzzz, r8.xyzx, r4.xywx
dp3 r1.w, r4.xyzx, r4.xyzx
rsq r1.w, r1.w
mul r4.xyz, r1.wwww, r4.xyzx
ilt r8.xyzw, l(3, 2, 1, 0), cb0[0].xxxx
mul r2.xyz, r0.wwww, r2.xyzx
mul r7.xyz, r0.wwww, r7.xyzx
mul r9.xy, r0.wwww, cb0[8].xyxx
and r2.xyz, r2.xyzx, r8.xxxx
and r7.xyz, r7.xyzx, r8.xxxx
and r9.xy, r8.xxxx, r9.xyxx
mad r3.xyz, r3.xyzx, r0.zzzz, r2.xyzx
mad r1.xyz, r1.xyzx, r0.zzzz, r7.xyzx
mad r0.zw, cb0[6].xxxy, r0.zzzz, r9.xxxy
movc r2.xyz, r8.yyyy, r3.xyzx, r2.xyzx
movc r1.xyz, r8.yyyy, r1.xyzx, r7.xyzx
movc r0.zw, r8.yyyy, r0.zzzw, r9.xxxy
mad r3.xyz, r5.xyzx, r0.yyyy, r2.xyzx
mad r5.xyz, r11.xyzx, r0.yyyy, r1.xyzx
mad r7.xy, cb0[4].xyxx, r0.yyyy, r0.zwzz
movc r2.xyz, r8.zzzz, r3.xyzx, r2.xyzx
movc r1.xyz, r8.zzzz, r5.xyzx, r1.xyzx
movc r0.yz, r8.zzzz, r7.xxyx, r0.zzwz
mad r3.xyz, r6.xyzx, r0.xxxx, r2.xyzx
mad r4.xyz, r4.xyzx, r0.xxxx, r1.xyzx
mad r0.xw, cb0[2].xxxy, r0.xxxx, r0.yyyz
movc r2.xyz, r8.wwww, r3.xyzx, r2.xyzx
movc r1.xyz, r8.wwww, r4.xyzx, r1.xyzx
movc r0.xy, r8.wwww, r0.xwxx, r0.yzyy
log r2.xyz, r2.xyzx
mul r2.xyz, r2.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
exp r2.xyz, r2.xyzx
dp3 r0.z, r1.xyzx, r1.xyzx
rsq r0.z, r0.z
mul r1.xyz, r0.zzzz, r1.xyzx
add r3.xyz, -v1.xyzx, cb1[57].xyzx
dp3 r0.z, r3.xyzx, r3.xyzx
rsq r0.z, r0.z
mul r3.xyz, r0.zzzz, r3.xyzx
add r4.xyz, r2.xyzx, l(-0.040000, -0.040000, -0.040000, 0.000000)
mad r4.xyz, r0.xxxx, r4.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000)
dp3_sat r0.z, r1.xyzx, r3.xyzx
add r5.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
max r0.w, r0.y, l(0.000010)
mul r0.w, r0.w, r0.w
mul r1.w, r0.w, r0.w
mad r0.w, r0.w, r0.w, l(-1.000000)
add r0.y, r0.y, l(1.000000)
mul r0.y, r0.y, r0.y
mul r2.w, r0.y, l(0.125000)
mad r0.y, -r0.y, l(0.125000), l(1.000000)
mad r3.w, r0.z, r0.y, r2.w
div r3.w, r0.z, r3.w
mov r6.xyz, v1.xyzx
mov r6.w, l(1.000000)
mov r7.xyz, l(0,0,0,0)
mov r4.w, cb2[39].x
mov r5.w, l(0)
loop 
  uge r7.w, r5.w, cb1[56].x
  breakc_nz r7.w
  ishl r7.w, r5.w, l(1)
  dp3 r8.x, -cb1[r7.w + 1].xyzx, -cb1[r7.w + 1].xyzx
  rsq r8.x, r8.x
  mul r8.yzw, r8.xxxx, -cb1[r7.w + 1].xxyz
  mad r9.xyz, -cb1[r7.w + 1].xyzx, r8.xxxx, r3.xyzx
  dp3 r8.x, r9.xyzx, r9.xyzx
  rsq r8.x, r8.x
  mul r9.xyz, r8.xxxx, r9.xyzx
  dp3_sat r8.x, r1.xyzx, r8.yzwy
  dp3_sat r8.y, r1.xyzx, r9.xyzx
  dp3 r8.z, r9.xyzx, r3.xyzx
  max r8.z, r8.z, l(0.000000)
  add r8.z, -r8.z, l(1.000000)
  mul r8.w, r8.z, r8.z
  mul r8.w, r8.w, r8.w
  mul r8.z, r8.w, r8.z
  mad r9.xyz, r5.xyzx, r8.zzzz, r4.xyzx
  mul r8.y, r8.y, r8.y
  mad r8.y, r8.y, r0.w, l(1.000000)
  mul r8.y, r8.y, r8.y
  mul r8.y, r8.y, l(3.141592)
  div r8.y, r1.w, r8.y
  mad r8.z, r8.x, r0.y, r2.w
  div r8.z, r8.x, r8.z
  mul r8.z, r3.w, r8.z
  mul r10.xyz, r8.yyyy, r9.xyzx
  mul r8.yzw, r8.zzzz, r10.xxyz
  mul r9.w, r0.z, r8.x
  mul r9.w, r9.w, l(4.000000)
  max r9.w, r9.w, l(0.000010)
  div r8.yzw, r8.yyzw, r9.wwww
  add r9.xyz, -r9.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mad r9.xyz, r0.xxxx, -r9.xyzx, r9.xyzx
  mul r9.xyz, r2.xyzx, r9.xyzx
  mad r8.yzw, r9.xxyz, l(0.000000, 0.318310, 0.318310, 0.318310), r8.yyzw
  mul r8.xyz, r8.xxxx, r8.yzwy
  mul r8.xyz, r8.xyzx, cb1[r7.w + 0].xyzx
  mul r8.xyz, r8.xyzx, cb1[r7.w + 0].wwww
  ult r7.w, r5.w, r4.w
  if_nz r7.w
    mov r7.w, l(2)
    mov r8.w, l(0)
    loop 
      uge r9.x, r8.w, l(3)
      breakc_nz r9.x
      dp4 r9.x, cb2[r5.w + 36].xyzw, icb[r8.w + 0].xyzw
      ge r9.x, r9.x, v1.w
      if_nz r9.x
        mov r7.w, r8.w
        break 
      endif 
      iadd r8.w, r8.w, l(1)
      mov r7.w, l(2)
    endloop 
    imad r8.w, r5.w, l(3), r7.w
    ishl r9.x, r8.w, l(2)
    dp4 r10.x, r6.xyzw, cb2[r9.x + 0].xyzw
    dp4 r10.y, r6.xyzw, cb2[r9.x + 1].xyzw
    dp4 r9.x, r6.xyzw, cb2[r9.x + 2].xyzw
    lt r9.yz, r10.xxyx, l(0.000000, -1.000000, -1.000000, 0.000000)
    lt r11.xy, l(1.000000, 1.000000, 0.000000, 0.000000), r10.xyxx
    or r9.y, r9.y, r11.x
    or r9.y, r9.z, r9.y
    or r9.y, r11.y, r9.y
    lt r9.z, r9.x, l(-1.000000)
    or r9.y, r9.z, r9.y
    lt r9.z, l(1.000000), r9.x
    or r9.y, r9.z, r9.y
    if_z r9.y
      add r11.xy, r10.xyxx, l(-0.000977, -0.000977, 0.000000, 0.000000)
      utof r11.z, r8.w
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r8.w, r11.xyzx, t18.xxxx, s1, r9.x
      add r11.xy, r10.xyxx, l(0.000000, -0.000977, 0.000000, 0.000000)
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r9.y, r11.xyzx, t18.xxxx, s1, r9.x
      add r8.w, r8.w, r9.y
      add r11.xy, r10.xyxx, l(0.000977, -0.000977, 0.000000, 0.000000)
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r9.y, r11.xyzx, t18.xxxx, s1, r9.x
      add r8.w, r8.w, r9.y
      add r11.xy, r10.xyxx, l(-0.000977, 0.000000, 0.000000, 0.000000)
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r9.y, r11.xyzx, t18.xxxx, s1, r9.x
      add r8.w, r8.w, r9.y
      mov r10.z, r11.z
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r9.y, r10.xyzx, t18.xxxx, s1, r9.x
      add r8.w, r8.w, r9.y
      add r10.w, r10.x, l(0.000977)
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r9.y, r10.wyzw, t18.xxxx, s1, r9.x
      add r8.w, r8.w, r9.y
      add r9.yzw, r10.xxyz, l(0.000000, -0.000977, 0.000977, 0.000000)
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r9.y, r9.yzwy, t18.xxxx, s1, r9.x
      add r8.w, r8.w, r9.y
      add r9.yzw, r10.xxyz, l(0.000000, 0.000000, 0.000977, 0.000000)
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r9.y, r9.yzwy, t18.xxxx, s1, r9.x
      add r8.w, r8.w, r9.y
      add r9.yzw, r10.xxyz, l(0.000000, 0.000977, 0.000977, 0.000000)
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r9.x, r9.yzwy, t18.xxxx, s1, r9.x
      add r8.w, r8.w, r9.x
      mul r8.w, r8.w, l(0.111111)
    else 
      mov r8.w, l(1.000000)
    endif 
    mul r8.xyz, r8.wwww, r8.xyzx
  endif 
  add r7.xyz, r7.xyzx, r8.xyzx
  iadd r5.w, r5.w, l(1)
endloop 
mov r6.x, l(1.000000)
mov r8.xyz, r7.xyzx
mov r4.w, l(0)
loop 
  uge r5.w, r4.w, cb1[56].y
  breakc_nz r5.w
  imul null, r5.w, r4.w, l(3)
  add r9.xyz, -v1.xyzx, cb1[r5.w + 7].xyzx
  dp3 r6.z, r9.xyzx, r9.xyzx
  sqrt r6.y, r6.z
  ge r6.w, cb1[r5.w + 7].w, r6.y
  if_nz r6.w
    rsq r6.w, r6.z
    mul r10.xyz, r6.wwww, r9.xyzx
    mad r9.xyz, r9.xyzx, r6.wwww, r3.xyzx
    dp3 r6.w, r9.xyzx, r9.xyzx
    rsq r6.w, r6.w
    mul r9.xyz, r6.wwww, r9.xyzx
    dp3_sat r6.w, r1.xyzx, r10.xyzx
    dp3_sat r7.w, r1.xyzx, r9.xyzx
    dp3 r8.w, r9.xyzx, r3.xyzx
    max r8.w, r8.w, l(0.000000)
    add r8.w, -r8.w, l(1.000000)
    mul r9.x, r8.w, r8.w
    mul r9.x, r9.x, r9.x
    mul r8.w, r8.w, r9.x
    mad r9.xyz, r5.xyzx, r8.wwww, r4.xyzx
    mul r7.w, r7.w, r7.w
    mad r7.w, r7.w, r0.w, l(1.000000)
    mul r7.w, r7.w, r7.w
    mul r7.w, r7.w, l(3.141592)
    div r7.w, r1.w, r7.w
    mad r8.w, r6.w, r0.y, r2.w
    div r8.w, r6.w, r8.w
    mul r8.w, r3.w, r8.w
    mul r10.xyz, r7.wwww, r9.xyzx
    mul r10.xyz, r8.wwww, r10.xyzx
    mul r7.w, r0.z, r6.w
    mul r7.w, r7.w, l(4.000000)
    max r7.w, r7.w, l(0.000010)
    div r10.xyz, r10.xyzx, r7.wwww
    add r9.xyz, -r9.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mad r9.xyz, r0.xxxx, -r9.xyzx, r9.xyzx
    mul r9.xyz, r2.xyzx, r9.xyzx
    mad r9.xyz, r9.xyzx, l(0.318310, 0.318310, 0.318310, 0.000000), r10.xyzx
    mul r9.xyz, r6.wwww, r9.xyzx
    mul r9.xyz, r9.xyzx, cb1[r5.w + 6].xyzx
    mul r9.xyz, r9.xyzx, cb1[r5.w + 6].wwww
    dp3 r5.w, cb1[r5.w + 8].xyzx, r6.xyzx
    div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r5.w
    mul r6.yzw, r5.wwww, r9.xxyz
  else 
    mov r6.yzw, l(0,0,0,0)
  endif 
  add r8.xyz, r6.yzwy, r8.xyzx
  iadd r4.w, r4.w, l(1)
endloop 
mov r6.x, l(1.000000)
mov r7.xyz, r8.xyzx
mov r4.w, l(0)
loop 
  uge r5.w, r4.w, cb1[56].z
  breakc_nz r5.w
  ishl r5.w, r4.w, l(2)
  add r9.xyz, -v1.xyzx, cb1[r5.w + 37].xyzx
  dp3 r6.z, r9.xyzx, r9.xyzx
  sqrt r6.y, r6.z
  ge r6.w, cb1[r5.w + 37].w, r6.y
  if_nz r6.w
    rsq r6.w, r6.z
    mul r10.xyz, r6.wwww, r9.xyzx
    mad r9.xyz, r9.xyzx, r6.wwww, r3.xyzx
    dp3 r6.w, r9.xyzx, r9.xyzx
    rsq r6.w, r6.w
    mul r9.xyz, r6.wwww, r9.xyzx
    dp3_sat r6.w, r1.xyzx, r10.xyzx
    dp3_sat r7.w, r1.xyzx, r9.xyzx
    dp3 r8.w, r9.xyzx, r3.xyzx
    max r8.w, r8.w, l(0.000000)
    add r8.w, -r8.w, l(1.000000)
    mul r9.x, r8.w, r8.w
    mul r9.x, r9.x, r9.x
    mul r8.w, r8.w, r9.x
    mad r9.xyz, r5.xyzx, r8.wwww, r4.xyzx
    mul r7.w, r7.w, r7.w
    mad r7.w, r7.w, r0.w, l(1.000000)
    mul r7.w, r7.w, r7.w
    mul r7.w, r7.w, l(3.141592)
    div r7.w, r1.w, r7.w
    mad r8.w, r6.w, r0.y, r2.w
    div r8.w, r6.w, r8.w
    mul r8.w, r3.w, r8.w
    mul r11.xyz, r7.wwww, r9.xyzx
    mul r11.xyz, r8.wwww, r11.xyzx
    mul r7.w, r0.z, r6.w
    mul r7.w, r7.w, l(4.000000)
    max r7.w, r7.w, l(0.000010)
    div r11.xyz, r11.xyzx, r7.wwww
    add r9.xyz, -r9.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mad r9.xyz, r0.xxxx, -r9.xyzx, r9.xyzx
    mul r9.xyz, r2.xyzx, r9.xyzx
    mad r9.xyz, r9.xyzx, l(0.318310, 0.318310, 0.318310, 0.000000), r11.xyzx
    mul r9.xyz, r6.wwww, r9.xyzx
    mul r9.xyz, r9.xyzx, cb1[r5.w + 36].xyzx
    mul r9.xyz, r9.xyzx, cb1[r5.w + 36].wwww
    dp3 r6.w, -r10.xyzx, cb1[r5.w + 38].xyzx
    max r6.w, r6.w, l(0.000000)
    log r6.w, r6.w
    mul r6.w, r6.w, cb1[r5.w + 38].w
    exp r6.w, r6.w
    dp3 r5.w, cb1[r5.w + 39].xyzx, r6.xyzx
    div r5.w, r6.w, r5.w
    mul r6.yzw, r5.wwww, r9.xxyz
  else 
    mov r6.yzw, l(0,0,0,0)
  endif 
  add r7.xyz, r6.yzwy, r7.xyzx
  iadd r4.w, r4.w, l(1)
endloop 
mov o0.xyz, r7.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 370 instruction slots used
