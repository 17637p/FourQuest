//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer perFrame
// {
//
//   float4x4 gTexMatrix;               // Offset:    0 Size:    64
//   float4x4 gWorldMatrix;             // Offset:   64 Size:    64
//   float4x4 gViewMatrix;              // Offset:  128 Size:    64
//   float4x4 gProjMatrix;              // Offset:  192 Size:    64
//   float4x4 gInvWVMatrix;             // Offset:  256 Size:    64 [unused]
//   float2 gDeproject;                 // Offset:  320 Size:     8 [unused]
//   float gNormalThresholdInRadian;    // Offset:  328 Size:     4 [unused]
//   float gAlphaClipThreshold;         // Offset:  332 Size:     4 [unused]
//   bool gUseMultiplyAlpha;            // Offset:  336 Size:     4 [unused]
//   bool gUseAlphaClip;                // Offset:  340 Size:     4 [unused]
//   bool gUseAlbedoMap;                // Offset:  344 Size:     4 [unused]
//   bool gUseMetalnessMap;             // Offset:  348 Size:     4 [unused]
//   bool gUseRoughnessMap;             // Offset:  352 Size:     4 [unused]
//   bool gUseNormalMap;                // Offset:  356 Size:     4 [unused]
//   bool gUseEmissiveMap;              // Offset:  360 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// perFrame                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// UV                       0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// POSITION                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xyz         3     NONE   float   xyz 
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[16], immediateIndexed
dcl_input v0.xyz
dcl_input v1.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xy
dcl_output o3.xyz
dcl_temps 2
mov r0.xyz, v0.xyzx
mov r0.w, l(1.000000)
dp4 r1.x, r0.xyzw, cb0[4].xyzw
dp4 r1.y, r0.xyzw, cb0[5].xyzw
dp4 r1.z, r0.xyzw, cb0[6].xyzw
dp4 r1.w, r0.xyzw, cb0[7].xyzw
dp4 r0.x, r1.xyzw, cb0[8].xyzw
dp4 r0.y, r1.xyzw, cb0[9].xyzw
dp4 r0.z, r1.xyzw, cb0[10].xyzw
dp4 r0.w, r1.xyzw, cb0[11].xyzw
dp4 r1.x, r0.xyzw, cb0[12].xyzw
dp4 r1.y, r0.xyzw, cb0[13].xyzw
dp4 r1.z, r0.xyzw, cb0[14].xyzw
dp4 r1.w, r0.xyzw, cb0[15].xyzw
mov o0.xyzw, r1.xyzw
mov o1.xyzw, r1.xyzw
mov r0.xy, v1.xyxx
mov r0.z, l(1.000000)
dp3 o2.x, r0.xyzx, cb0[0].xywx
dp3 o2.y, r0.xyzx, cb0[1].xywx
mov r0.x, cb0[4].y
mov r0.y, cb0[5].y
mov r0.z, cb0[6].y
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul o3.xyz, r0.wwww, r0.xyzx
ret 
// Approximately 27 instruction slots used
