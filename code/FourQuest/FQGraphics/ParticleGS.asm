//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer cbParticleFrame
// {
//
//   float4x4 gViewMatrix;              // Offset:    0 Size:    64
//   float4x4 gProjMatrix;              // Offset:   64 Size:    64
//   float4x4 gInvProjMatrix;           // Offset:  128 Size:    64 [unused]
//   uint gScreenWidth;                 // Offset:  192 Size:     4 [unused]
//   uint gScreenHeight;                // Offset:  196 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// cbParticleFrame                   cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xyzw        2     NONE   float     zw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1   xyzw        3     NONE   float   xyzw
//
gs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[8], immediateIndexed
dcl_input v[1][0].xyz
dcl_input v[1][1].xyzw
dcl_input v[1][2].xyzw
dcl_temps 5
dcl_inputprimitive point 
dcl_stream m0
dcl_outputtopology trianglestrip 
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xy
dcl_output o3.xyzw
dcl_maxout 4
sincos r0.x, r1.x, v[0][2].z
mov r2.z, r0.x
mov r2.y, r1.x
mov r2.x, -r0.x
dp2 r0.x, l(-1.000000, 1.000000, 0.000000, 0.000000), r2.yzyy
dp2 r0.y, l(-1.000000, 1.000000, 0.000000, 0.000000), r2.xyxx
mov r1.xyz, v[0][0].xyzx
mov r1.w, l(1.000000)
dp4 r3.x, r1.xyzw, cb0[0].xyzw
dp4 r3.y, r1.xyzw, cb0[1].xyzw
mad r0.xy, v[0][2].wwww, r0.xyxx, r3.xyxx
dp4 r0.z, r1.xyzw, cb0[2].xyzw
dp4 r0.w, r1.xyzw, cb0[3].xyzw
dp4 r1.x, r0.xyzw, cb0[4].xyzw
dp4 r1.y, r0.xyzw, cb0[5].xyzw
dp4 r1.z, r0.xyzw, cb0[7].xyzw
dp4 r1.w, r0.xyzw, cb0[6].xyzw
mov o0.xyw, r1.xyxz
dp2 r1.x, r1.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000)
dp2 r1.y, r1.yzyy, l(-0.500000, 0.500000, 0.000000, 0.000000)
mov o0.z, r1.w
mov o1.xyzw, v[0][1].xyzw
mov o2.xy, l(0,1.000000,0,0)
mov o3.x, r1.x
mov o3.y, r1.y
mov o3.z, r1.w
mov o3.w, r1.z
emit_stream m0
dp2 r1.x, l(1.000000, 1.000000, 0.000000, 0.000000), r2.yzyy
dp2 r1.y, l(1.000000, 1.000000, 0.000000, 0.000000), r2.xyxx
mad r0.xy, v[0][2].wwww, r1.xyxx, r3.xyxx
dp4 r1.x, r0.xyzw, cb0[4].xyzw
dp4 r1.y, r0.xyzw, cb0[5].xyzw
dp4 r1.z, r0.xyzw, cb0[7].xyzw
dp4 r1.w, r0.xyzw, cb0[6].xyzw
mov o0.xyw, r1.xyxz
dp2 r1.x, r1.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000)
dp2 r1.y, r1.yzyy, l(-0.500000, 0.500000, 0.000000, 0.000000)
mov o0.z, r1.w
mov o1.xyzw, v[0][1].xyzw
mov o2.xy, l(1.000000,1.000000,0,0)
mov o3.x, r1.x
mov o3.y, r1.y
mov o3.z, r1.w
mov o3.w, r1.z
emit_stream m0
dp2 r1.x, l(-1.000000, -1.000000, 0.000000, 0.000000), r2.yzyy
dp2 r4.x, l(1.000000, -1.000000, 0.000000, 0.000000), r2.yzyy
dp2 r1.y, l(-1.000000, -1.000000, 0.000000, 0.000000), r2.xyxx
dp2 r4.y, l(1.000000, -1.000000, 0.000000, 0.000000), r2.xyxx
mad r2.xy, v[0][2].wwww, r4.xyxx, r3.xyxx
mad r0.xy, v[0][2].wwww, r1.xyxx, r3.xyxx
dp4 r1.x, r0.xyzw, cb0[4].xyzw
dp4 r1.y, r0.xyzw, cb0[5].xyzw
dp4 r1.z, r0.xyzw, cb0[7].xyzw
dp4 r0.x, r0.xyzw, cb0[6].xyzw
mov r2.zw, r0.zzzw
mov o0.xyw, r1.xyxz
dp2 r0.y, r1.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000)
dp2 r0.z, r1.yzyy, l(-0.500000, 0.500000, 0.000000, 0.000000)
mov o0.z, r0.x
mov o1.xyzw, v[0][1].xyzw
mov o2.xy, l(0,0,0,0)
mov o3.x, r0.y
mov o3.y, r0.z
mov o3.z, r0.x
mov o3.w, r1.z
emit_stream m0
dp4 r0.x, r2.xyzw, cb0[4].xyzw
dp4 r0.y, r2.xyzw, cb0[5].xyzw
dp4 r0.z, r2.xyzw, cb0[7].xyzw
dp4 r0.w, r2.xyzw, cb0[6].xyzw
mov o0.xyw, r0.xyxz
dp2 r0.x, r0.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000)
dp2 r0.y, r0.yzyy, l(-0.500000, 0.500000, 0.000000, 0.000000)
mov o0.z, r0.w
mov o1.xyzw, v[0][1].xyzw
mov o2.xy, l(1.000000,0,0,0)
mov o3.x, r0.x
mov o3.y, r0.y
mov o3.z, r0.w
mov o3.w, r0.z
emit_stream m0
cut_stream m0
ret 
// Approximately 85 instruction slots used
