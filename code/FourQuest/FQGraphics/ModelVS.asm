//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer cbSceneTransform
// {
//
//   float4x4 cView;                    // Offset:    0 Size:    64
//   float4x4 cViewProj;                // Offset:   64 Size:    64
//
// }
//
// cbuffer cbMaterial
// {
//
//   float4 cBaseColor;                 // Offset:    0 Size:    16 [unused]
//   float4 cEmissiveColor;             // Offset:   16 Size:    16 [unused]
//   float4x4 gTexTransform;            // Offset:   32 Size:    64
//   float cMetalness;                  // Offset:   96 Size:     4 [unused]
//   float cRoughness;                  // Offset:  100 Size:     4 [unused]
//   bool cUseAlbedoMap;                // Offset:  104 Size:     4 [unused]
//   bool cUseMetalnessMap;             // Offset:  108 Size:     4 [unused]
//   bool cUseRoughnessMap;             // Offset:  112 Size:     4 [unused]
//   bool cUseNormalMap;                // Offset:  116 Size:     4 [unused]
//   bool cUseEmissiveMap;              // Offset:  120 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// cbSceneTransform                  cbuffer      NA          NA            cb1      1 
// cbMaterial                        cbuffer      NA          NA            cb3      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyz         2     NONE   float   xyz 
// UV                       0   xy          3     NONE   float   xy  
// WORLD                    0   xyzw        4     NONE   float   xyzw
// WORLD                    1   xyzw        5     NONE   float   xyzw
// WORLD                    2   xyzw        6     NONE   float   xyzw
// WORLD                    3   xyzw        7     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// POSITION                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 3      w        1     NONE   float      w
// NORMAL                   0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xyz         3     NONE   float   xyz 
// TEXCOORD                 1   xy          4     NONE   float   xy  
// TEXCOORD                 2     z         4     NONE   float     z 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB1[8], immediateIndexed
dcl_constantbuffer CB3[4], immediateIndexed
dcl_input v0.xyz
dcl_input v1.xyz
dcl_input v2.xyz
dcl_input v3.xy
dcl_input v4.xyzw
dcl_input v5.xyzw
dcl_input v6.xyzw
dcl_input v7.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyz
dcl_output o1.w
dcl_output o2.xyz
dcl_output o3.xyz
dcl_output o4.xy
dcl_output o4.z
dcl_output o5.xyz
dcl_output o6.xyz
dcl_temps 3
//
// Initial variable locations:
//   v0.x <- vin.Position.x; v0.y <- vin.Position.y; v0.z <- vin.Position.z; 
//   v1.x <- vin.NormalL.x; v1.y <- vin.NormalL.y; v1.z <- vin.NormalL.z; 
//   v2.x <- vin.TangentL.x; v2.y <- vin.TangentL.y; v2.z <- vin.TangentL.z; 
//   v3.x <- vin.UV.x; v3.y <- vin.UV.y; 
//   v4.x <- vin.World._m00; v4.y <- vin.World._m01; v4.z <- vin.World._m02; v4.w <- vin.World._m03; 
//   v5.x <- vin.World._m10; v5.y <- vin.World._m11; v5.z <- vin.World._m12; v5.w <- vin.World._m13; 
//   v6.x <- vin.World._m20; v6.y <- vin.World._m21; v6.z <- vin.World._m22; v6.w <- vin.World._m23; 
//   v7.x <- vin.World._m30; v7.y <- vin.World._m31; v7.z <- vin.World._m32; v7.w <- vin.World._m33; 
//   o6.x <- <main return value>.TangentV.x; o6.y <- <main return value>.TangentV.y; o6.z <- <main return value>.TangentV.z; 
//   o5.x <- <main return value>.NormalV.x; o5.y <- <main return value>.NormalV.y; o5.z <- <main return value>.NormalV.z; 
//   o4.x <- <main return value>.UV.x; o4.y <- <main return value>.UV.y; o4.z <- <main return value>.ClipSpacePosZ; 
//   o3.x <- <main return value>.TangentW.x; o3.y <- <main return value>.TangentW.y; o3.z <- <main return value>.TangentW.z; 
//   o2.x <- <main return value>.NormalW.x; o2.y <- <main return value>.NormalW.y; o2.z <- <main return value>.NormalW.z; 
//   o1.x <- <main return value>.PositionW.x; o1.y <- <main return value>.PositionW.y; o1.z <- <main return value>.PositionW.z; o1.w <- <main return value>.DepthView; 
//   o0.x <- <main return value>.PositionH.x; o0.y <- <main return value>.PositionH.y; o0.z <- <main return value>.PositionH.z; o0.w <- <main return value>.PositionH.w
//
#line 82 "C:\Git\FinalProject\code\FourQuest\FQGraphics\ModelVS.hlsl"
mul r0.xyzw, v0.yyyy, v5.xyzw
mad r0.xyzw, v0.xxxx, v4.xyzw, r0.xyzw
mad r0.xyzw, v0.zzzz, v6.xyzw, r0.xyzw
add r0.xyzw, r0.xyzw, v7.xyzw  // r0.x <- vout.PositionH.x; r0.y <- vout.PositionH.y; r0.z <- vout.PositionH.z; r0.w <- vout.PositionH.w

#line 83
dp4 o0.x, r0.xyzw, cb1[4].xyzw
dp4 o0.y, r0.xyzw, cb1[5].xyzw
dp4 o0.w, r0.xyzw, cb1[7].xyzw
dp4 r1.x, r0.xyzw, cb1[6].xyzw  // r1.x <- vout.PositionH.z

#line 98
mov o0.z, r1.x
mov o4.z, r1.x

#line 86
mov r0.w, l(1.000000)
dp4 o1.w, r0.xyzw, cb1[2].xyzw

#line 98
mov o1.xyz, r0.xyzx

#line 88
mul r0.xyz, v1.yyyy, v5.xyzx
mad r0.xyz, v1.xxxx, v4.xyzx, r0.xyzx
mad r0.xyz, v1.zzzz, v6.xyzx, r0.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx  // r0.x <- vout.NormalW.x; r0.y <- vout.NormalW.y; r0.z <- vout.NormalW.z

#line 98
mov o2.xyz, r0.xyzx

#line 91
mul r1.xyz, v2.yyyy, v5.xyzx
mad r1.xyz, v2.xxxx, v4.xyzx, r1.xyzx
mad r1.xyz, v2.zzzz, v6.xyzx, r1.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx  // r1.x <- vout.TangentW.x; r1.y <- vout.TangentW.y; r1.z <- vout.TangentW.z

#line 98
mov o3.xyz, r1.xyzx

#line 94
mov r2.xy, v3.xyxx
mov r2.z, l(1.000000)
dp3 o4.x, r2.xyzx, cb3[2].xywx
dp3 o4.y, r2.xyzx, cb3[3].xywx

#line 89
dp3 r2.x, r0.xyzx, cb1[0].xyzx
dp3 r2.y, r0.xyzx, cb1[1].xyzx
dp3 r2.z, r0.xyzx, cb1[2].xyzx
dp3 r0.x, r2.xyzx, r2.xyzx
rsq r0.x, r0.x
mul o5.xyz, r0.xxxx, r2.xyzx

#line 92
dp3 r0.x, r1.xyzx, cb1[0].xyzx
dp3 r0.y, r1.xyzx, cb1[1].xyzx
dp3 r0.z, r1.xyzx, cb1[2].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul o6.xyz, r0.wwww, r0.xyzx

#line 98
ret 
// Approximately 44 instruction slots used
