//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
//
// Patch Constant signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TessFactor            0   x           0 QUADEDGE   float   x   
// SV_TessFactor            1   x           1 QUADEDGE   float   x   
// SV_TessFactor            2   x           2 QUADEDGE   float   x   
// SV_TessFactor            3   x           3 QUADEDGE   float   x   
// SV_InsideTessFactor      0   x           4  QUADINT   float   x   
// SV_InsideTessFactor      1   x           5  QUADINT   float   x   
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xy          3     NONE   float   xy  
// TEXCOORD                 1     zw        3     NONE   float     zw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TANGENT                  0   xyz         2     NONE   float   xyz 
// TEXCOORD                 0   xy          3     NONE   float   xy  
// TEXCOORD                 1     zw        3     NONE   float     zw
//
// Tessellation Domain   # of control points
// -------------------- --------------------
// Quadrilateral                           4
//
// Tessellation Output Primitive  Partitioning Type 
// ------------------------------ ------------------
// Clockwise Triangles            Even Fractional   
//
hs_5_0
hs_decls 
dcl_input_control_point_count 4
dcl_output_control_point_count 4
dcl_tessellator_domain domain_quad
dcl_tessellator_partitioning partitioning_fractional_even
dcl_tessellator_output_primitive output_triangle_cw
dcl_globalFlags refactoringAllowed
hs_fork_phase 
dcl_hs_fork_phase_instance_count 4
dcl_input vForkInstanceID
dcl_output_siv o0.x, finalQuadUeq0EdgeTessFactor
dcl_output_siv o1.x, finalQuadVeq0EdgeTessFactor
dcl_output_siv o2.x, finalQuadUeq1EdgeTessFactor
dcl_output_siv o3.x, finalQuadVeq1EdgeTessFactor
dcl_temps 1
dcl_indexrange o0.x 4
//
// Initial variable locations:
//   vPrim.x <- patchID; 
//   vpc0.x <- <ConstantHS return value>.EdgeTess[0]; 
//   vpc1.x <- <ConstantHS return value>.EdgeTess[1]; 
//   vpc2.x <- <ConstantHS return value>.EdgeTess[2]; 
//   vpc3.x <- <ConstantHS return value>.EdgeTess[3]; 
//   vpc4.x <- <ConstantHS return value>.InsideTess[0]; 
//   vpc5.x <- <ConstantHS return value>.InsideTess[1]; 
//   vicp[0][0].x <- patch[0].PositionW.x; vicp[0][0].y <- patch[0].PositionW.y; vicp[0][0].z <- patch[0].PositionW.z; 
//   vicp[0][1].x <- patch[0].NormalW.x; vicp[0][1].y <- patch[0].NormalW.y; vicp[0][1].z <- patch[0].NormalW.z; 
//   vicp[0][2].x <- patch[0].TangentW.x; vicp[0][2].y <- patch[0].TangentW.y; vicp[0][2].z <- patch[0].TangentW.z; 
//   vicp[0][3].x <- patch[0].UV.x; vicp[0][3].y <- patch[0].UV.y; vicp[0][3].z <- patch[0].BoundsY.x; vicp[0][3].w <- patch[0].BoundsY.y; 
//   vicp[1][0].x <- patch[1].PositionW.x; vicp[1][0].y <- patch[1].PositionW.y; vicp[1][0].z <- patch[1].PositionW.z; 
//   vicp[1][1].x <- patch[1].NormalW.x; vicp[1][1].y <- patch[1].NormalW.y; vicp[1][1].z <- patch[1].NormalW.z; 
//   vicp[1][2].x <- patch[1].TangentW.x; vicp[1][2].y <- patch[1].TangentW.y; vicp[1][2].z <- patch[1].TangentW.z; 
//   vicp[1][3].x <- patch[1].UV.x; vicp[1][3].y <- patch[1].UV.y; vicp[1][3].z <- patch[1].BoundsY.x; vicp[1][3].w <- patch[1].BoundsY.y; 
//   vicp[2][0].x <- patch[2].PositionW.x; vicp[2][0].y <- patch[2].PositionW.y; vicp[2][0].z <- patch[2].PositionW.z; 
//   vicp[2][1].x <- patch[2].NormalW.x; vicp[2][1].y <- patch[2].NormalW.y; vicp[2][1].z <- patch[2].NormalW.z; 
//   vicp[2][2].x <- patch[2].TangentW.x; vicp[2][2].y <- patch[2].TangentW.y; vicp[2][2].z <- patch[2].TangentW.z; 
//   vicp[2][3].x <- patch[2].UV.x; vicp[2][3].y <- patch[2].UV.y; vicp[2][3].z <- patch[2].BoundsY.x; vicp[2][3].w <- patch[2].BoundsY.y; 
//   vicp[3][0].x <- patch[3].PositionW.x; vicp[3][0].y <- patch[3].PositionW.y; vicp[3][0].z <- patch[3].PositionW.z; 
//   vicp[3][1].x <- patch[3].NormalW.x; vicp[3][1].y <- patch[3].NormalW.y; vicp[3][1].z <- patch[3].NormalW.z; 
//   vicp[3][2].x <- patch[3].TangentW.x; vicp[3][2].y <- patch[3].TangentW.y; vicp[3][2].z <- patch[3].TangentW.z; 
//   vicp[3][3].x <- patch[3].UV.x; vicp[3][3].y <- patch[3].UV.y; vicp[3][3].z <- patch[3].BoundsY.x; vicp[3][3].w <- patch[3].BoundsY.y; 
//   vOutputControlPointID.x <- i; 
//   vPrim.x <- patchID; 
//   o0.x <- <main return value>.PositionW.x; o0.y <- <main return value>.PositionW.y; o0.z <- <main return value>.PositionW.z; 
//   o1.x <- <main return value>.NormalW.x; o1.y <- <main return value>.NormalW.y; o1.z <- <main return value>.NormalW.z; 
//   o2.x <- <main return value>.TangentW.x; o2.y <- <main return value>.TangentW.y; o2.z <- <main return value>.TangentW.z; 
//   o3.x <- <main return value>.UV.x; o3.y <- <main return value>.UV.y; o3.z <- <main return value>.BoundsY.x; o3.w <- <main return value>.BoundsY.y; 
//   v[0][0].x <- patch[0].PositionW.x; v[0][0].y <- patch[0].PositionW.y; v[0][0].z <- patch[0].PositionW.z; 
//   v[0][1].x <- patch[0].NormalW.x; v[0][1].y <- patch[0].NormalW.y; v[0][1].z <- patch[0].NormalW.z; 
//   v[0][2].x <- patch[0].TangentW.x; v[0][2].y <- patch[0].TangentW.y; v[0][2].z <- patch[0].TangentW.z; 
//   v[0][3].x <- patch[0].UV.x; v[0][3].y <- patch[0].UV.y; v[0][3].z <- patch[0].BoundsY.x; v[0][3].w <- patch[0].BoundsY.y; 
//   v[1][0].x <- patch[1].PositionW.x; v[1][0].y <- patch[1].PositionW.y; v[1][0].z <- patch[1].PositionW.z; 
//   v[1][1].x <- patch[1].NormalW.x; v[1][1].y <- patch[1].NormalW.y; v[1][1].z <- patch[1].NormalW.z; 
//   v[1][2].x <- patch[1].TangentW.x; v[1][2].y <- patch[1].TangentW.y; v[1][2].z <- patch[1].TangentW.z; 
//   v[1][3].x <- patch[1].UV.x; v[1][3].y <- patch[1].UV.y; v[1][3].z <- patch[1].BoundsY.x; v[1][3].w <- patch[1].BoundsY.y; 
//   v[2][0].x <- patch[2].PositionW.x; v[2][0].y <- patch[2].PositionW.y; v[2][0].z <- patch[2].PositionW.z; 
//   v[2][1].x <- patch[2].NormalW.x; v[2][1].y <- patch[2].NormalW.y; v[2][1].z <- patch[2].NormalW.z; 
//   v[2][2].x <- patch[2].TangentW.x; v[2][2].y <- patch[2].TangentW.y; v[2][2].z <- patch[2].TangentW.z; 
//   v[2][3].x <- patch[2].UV.x; v[2][3].y <- patch[2].UV.y; v[2][3].z <- patch[2].BoundsY.x; v[2][3].w <- patch[2].BoundsY.y; 
//   v[3][0].x <- patch[3].PositionW.x; v[3][0].y <- patch[3].PositionW.y; v[3][0].z <- patch[3].PositionW.z; 
//   v[3][1].x <- patch[3].NormalW.x; v[3][1].y <- patch[3].NormalW.y; v[3][1].z <- patch[3].NormalW.z; 
//   v[3][2].x <- patch[3].TangentW.x; v[3][2].y <- patch[3].TangentW.y; v[3][2].z <- patch[3].TangentW.z; 
//   v[3][3].x <- patch[3].UV.x; v[3][3].y <- patch[3].UV.y; v[3][3].z <- patch[3].BoundsY.x; v[3][3].w <- patch[3].BoundsY.y
//
#line 121 "C:\Git\FourQuest\code\FourQuest\FQGraphics\TerrainHS.hlsl"
mov r0.x, vForkInstanceID.x
mov o[r0.x + 0].x, l(50.000000)
ret 
hs_fork_phase 
dcl_hs_fork_phase_instance_count 2
dcl_input vForkInstanceID
dcl_output_siv o4.x, finalQuadUInsideTessFactor
dcl_output_siv o5.x, finalQuadVInsideTessFactor
dcl_temps 1
dcl_indexrange o4.x 2
mov r0.x, vForkInstanceID.x
mov o[r0.x + 4].x, l(50.000000)
ret 
// Approximately 6 instruction slots used
